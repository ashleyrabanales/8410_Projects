# -*- coding: utf-8 -*-
"""IFI8410-InstructorNotes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Goyn8NUEXy5_lhE58T63lp91jmbzIWlF
"""
#%%
#INTEGAR
x = 1
y = 35656222554887711262586585980779
z = -3255522
print(type(x))
#%%
print(y+1)
print(2*(x+y))
#%%

#FLOAT
x = 4.2
y = .2
a_large_number = 1.79e108
print(a_large_number)
print("{:.20e}".format(a_large_number)) #display 20 digits
print(format(a_large_number, 'f')) #display full number
#%%

#STRING 1
print('abc\tdef')
print('abc\ndef')
print(r'abc\tdef')
p#%%

#STRING 2
#print('Today's agenda') #ERROR#
print("Today's agenda") # method 1
print('Today\'s agenda')# method 2 using \ to use to ignore the aposterfyt
#	, \"	\<new line>,		\\)
#%%
print("hello".capitalize())
print("hello".count("l"))
print("hello".endswith("o"))
print("hello".isalpha())
print("hello".isdigit())
print("HeLLo".lower())
print("Hello".upper())
print("  hello  ".strip())
#%%


# BOOL 1
a = True
print(type(a)) #PRINT type of a 
#%%
b = 2 > 1
print(type(b))
#%%
c = 2 == 3 
# == Equal to - True if both operands are equal. x == y.
# != Not equal to - True if operands are not equal.
print(type(c))
#%%
print(a,b,c)
#%%

# BOOL 2
a = 10
b = 5
if b > a:
  print("b is greater than a")
else:
  print("b is not greater than a")
#%%

# BOOL 3
if a > b:
  print("a is grater than b")
elif a == b*2: #next time change it to if
	print("a is twice of b")
else:
	print("cannot find any logic")
#%%

# LIST 1
the_list = [1,3, "Four", 5, "six", 7]
print(len(the_list))
print(the_list[0])
print(the_list[5])
print(the_list[-1])
print(the_list[-2])
#%%

# list 2 (string)
my_str = "hello"
print(len(my_str))
print(my_str[0])
print(my_str[-1])
#%%

# list 3 (nested)
a = [1, [3,5], 2, [55,6,1]]
print(a[0])
print(a[1])
print(a[1][0])
print(type(a[1]))
print(type(a[1][0]))
#%%


# list 4 (nested)
matrix = [[0, 1, 2],
          [3, 4, 5],
          [6, 7, 8],
          [9, 10, 11]]
print(matrix[0]) #first row
print(matrix[-1]) #last row
print(matrix[1][1]) #second row, second column
#%%



list(reversed([1,2,3]))

x = int(input("Enter x:"))
print(f"You have entered: {x}")
#%%
